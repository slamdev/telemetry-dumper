run:
  concurrency: 0
  timeout: 10m
  modules-download-mode: readonly

linters-settings:
  copyloopvar:
    # Check all assigning the loop variable to another variable.
    # Default: false
    check-alias: true

  errcheck:
    check-blank: true
  errchkjson:
    # With check-error-free-encoding set to true, errchkjson does warn about errors
    # from json encoding functions that are safe to be ignored,
    # because they are not possible to happen.
    #
    # if check-error-free-encoding is set to true and errcheck linter is enabled,
    # it is recommended to add the following exceptions to prevent from false positives:
    #
    #     linters-settings:
    #       errcheck:
    #         exclude-functions:
    #           - encoding/json.Marshal
    #           - encoding/json.MarshalIndent
    #
    # Default: false
    check-error-free-encoding: true
    # Issue on struct encoding that doesn't have exported fields.
    # Default: false
    report-no-exported: true

  gocritic:
    enable-all: true
    disabled-checks:
      - hugeParam
      - paramTypeCombine
      - unnamedResult
      - commentedOutCode
      - nestingReduce
      - rangeValCopy
      - whyNoLint

  gosimple:
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all", "-S1016" ]

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # (in addition to default
    #   atomicalign, deepequalerrors, fieldalignment, findcall, nilness, reflectvaluecompare, shadow, sortslice,
    #   timeformat, unusedwrite
    # ).
    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.
    # Default: []
    disable:
      - fieldalignment
      - shadow
      - slog

  loggercheck:
    # Require printf-like format specifier (%s, %d for example) not present.
    # Default: false
    no-printf-like: true

  revive:
    # Enable all available rules.
    # Default: false
    enable-all-rules: true

    # Sets the default failure confidence.
    # This means that linting errors with less than 0.8 confidence will be ignored.
    # Default: 0.8
    confidence: 0.1

    rules:
      - name: cyclomatic
        disabled: true
      - name: line-length-limit
        disabled: true
      - name: add-constant
        disabled: true
      - name: confusing-results
        disabled: true
      - name: function-result-limit
        disabled: true
      - name: cognitive-complexity
        disabled: true
      - name: modifies-parameter
        disabled: true
      - name: flag-parameter
        disabled: true
      - name: unused-receiver
        disabled: true
      - name: unchecked-type-assertion
        disabled: true
      - name: function-length
        disabled: true
      - name: comment-spacings
        disabled: true

  exhaustive:
    check:
      - switch
      - map
    # Presence of "default" case in switch statements satisfies exhaustiveness,
    # even if all enum members are not listed.
    # Default: false
    default-signifies-exhaustive: true

  sloglint:
    # Enforce using methods that accept a context.
    # Values:
    # - "": disabled
    # - "all": report all contextless calls
    # - "scope": report only if a context exists in the scope of the outermost function
    # Default: ""
    context: "scope"
    # Enforce a single key naming convention.
    # Values: snake, kebab, camel, pascal
    # Default: ""
    key-naming-case: camel

  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all" ]

  stylecheck:
    # STxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all" ]
    # https://staticcheck.io/docs/configuration/options/#http_status_code_whitelist
    # Default: ["200", "400", "404", "500"]
    http-status-code-whitelist: [ ]

  testifylint:
    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).
    # Default: false
    enable-all: true
    # Disable checkers by name
    # (in addition to default
    #   suite-thelper
    # ).
    disable: [ ]

  wrapcheck:
    # An array of strings that specify substrings of signatures to ignore.
    # If this set, it will override the default set of ignored signatures.
    # See https://github.com/tomarrell/wrapcheck#configuration for more information.
    # Default: [".Errorf(", "errors.New(", "errors.Unwrap(", "errors.Join(", ".Wrap(", ".Wrapf(", ".WithMessage(", ".WithMessagef(", ".WithStack("]
    ignoreSigs: [ "integration.NewAPIClientHTTPError(", "temporal.NewNonRetryableApplicationError(", ".Errorf(", "errors.New(", "errors.Unwrap(", "errors.Join(", ".Wrap(", ".Wrapf(", ".WithMessage(", ".WithMessagef(", ".WithStack(" ]

  unused:
    # Mark all struct fields that have been written to as used.
    # Default: true
    field-writes-are-uses: false
    # Mark all exported identifiers as used.
    # Default: true
    exported-is-used: true # panics on false: https://github.com/golangci/golangci-lint/issues/4218
    # Mark all exported fields as used.
    # default: true
    exported-fields-are-used: false
    # Mark all function parameters as used.
    # default: true
    parameters-are-used: true
    # Mark all local variables as used.
    # default: true
    local-variables-are-used: false

linters:
  # Enable all available linters.
  # Default: false
  enable-all: true
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default
  disable:
    - gofumpt # useless
    - unparam # useless
    - wsl # useless
    - varnamelen # useless
    - thelper # useless
    - testpackage # useless
    - perfsprint # useless
    - nonamedreturns # useless
    - nlreturn # useless
    - mnd # useless
    - interfacebloat # useless
    - ireturn # useless
    - grouper # useless
    - gochecknoglobals # useless
    - forcetypeassert # useless
    - exhaustruct # useless
    - err113 # useless
    - decorder # useless
    - cyclop # useless
    - prealloc # useless
    - nestif # useless
    - lll # useless
    - gomoddirectives # useless
    - goimports # useless
    - godox # useless
    - gocyclo # useless
    - gci # useless
    - gocognit # useless
    - funlen # useless
    - dupl # useless
    - depguard # useless
    - execinquery # Deprecated
    - gomnd # Deprecated

issues:

  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - dogsled
    - path: tools/.*
      linters:
        - unused

  # Fix found issues (if it's supported by the linter).
  # Default: false
  fix: false
